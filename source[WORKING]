-- Add Just a Baseplate to your GameHubs table with full scripts
GameHubs[17574618959] = { -- Just a Baseplate
    Name = "Just a Baseplate",
    Hubs = {
        {
            Name = "Animation Player GUI",
            Callback = function()
                -- Full Animation Player GUI script
                local Players = game:GetService("Players")
                local TweenService = game:GetService("TweenService")
                local UserInputService = game:GetService("UserInputService")
                local player = Players.LocalPlayer

                local function makeDraggable(frame)
                    local dragToggle, dragStart, startPos
                    local function update(input)
                        local delta = input.Position - dragStart
                        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
                    end
                    frame.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                            dragToggle = true
                            dragStart = input.Position
                            startPos = frame.Position
                            input.Changed:Connect(function()
                                if input.UserInputState == Enum.UserInputState.End then
                                    dragToggle = false
                                end
                            end)
                        end
                    end)
                    frame.InputChanged:Connect(function(input)
                        if dragToggle and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                            update(input)
                        end
                    end)
                end

                local function createGui()
                    if player:FindFirstChild("PlayerGui") then
                        local old = player.PlayerGui:FindFirstChild("AnimPlayer")
                        if old then old:Destroy() end
                    end
                    local gui = Instance.new("ScreenGui")
                    gui.Name = "AnimPlayer"
                    gui.ResetOnSpawn = false
                    gui.Parent = player:WaitForChild("PlayerGui")

                    local frame = Instance.new("Frame")
                    frame.Size = UDim2.new(0, 360, 0, 460)
                    frame.Position = UDim2.new(0.5, -180, 0.5, -230)
                    frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                    frame.BackgroundTransparency = 1
                    frame.Parent = gui
                    Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

                    local layout = Instance.new("UIListLayout", frame)
                    layout.Padding = UDim.new(0, 8)
                    layout.SortOrder = Enum.SortOrder.LayoutOrder
                    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center

                    local title = Instance.new("TextLabel", frame)
                    title.Text = "ðŸŽ¬ Animation Player"
                    title.Size = UDim2.new(1, -16, 0, 36)
                    title.BackgroundTransparency = 1
                    title.Font = Enum.Font.GothamBold
                    title.TextColor3 = Color3.new(1, 1, 1)
                    title.TextScaled = true
                    title.LayoutOrder = 1

                    makeDraggable(frame)
                    return gui, frame
                end

                local function makeSection(parent, name)
                    local section = Instance.new("Frame", parent)
                    section.Size = UDim2.new(0.95, 0, 0, 0)
                    section.BackgroundTransparency = 1
                    section.AutomaticSize = Enum.AutomaticSize.Y
                    section.LayoutOrder = 2

                    local layout = Instance.new("UIListLayout", section)
                    layout.Padding = UDim.new(0, 6)
                    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center

                    local label = Instance.new("TextLabel", section)
                    label.Text = "â€” " .. name .. " â€”"
                    label.Size = UDim2.new(1, 0, 0, 26)
                    label.BackgroundTransparency = 1
                    label.Font = Enum.Font.GothamBold
                    label.TextColor3 = Color3.new(1, 1, 1)
                    label.TextScaled = true
                    label.LayoutOrder = 1

                    return section
                end

                local function makeButton(parent, text)
                    local b = Instance.new("TextButton")
                    b.Size = UDim2.new(1, 0, 0, 32)
                    b.Text = text
                    b.Font = Enum.Font.GothamBold
                    b.TextColor3 = Color3.new(1, 1, 1)
                    b.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                    Instance.new("UICorner", b).CornerRadius = UDim.new(0, 8)
                    b.LayoutOrder = 2
                    b.Parent = parent
                    return b
                end

                local function playAnimToggle(humanoid, id, button, activeTracks)
                    if activeTracks[id] and activeTracks[id].IsPlaying then
                        activeTracks[id]:Stop()
                        activeTracks[id] = nil
                        button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                        return
                    end
                    local anim = Instance.new("Animation")
                    anim.AnimationId = "rbxassetid://" .. id
                    local track = humanoid:LoadAnimation(anim)
                    activeTracks[id] = track
                    track:Play()
                    button.BackgroundColor3 = Color3.fromRGB(0, 170, 85)
                    track.Stopped:Connect(function()
                        if activeTracks[id] == track then activeTracks[id] = nil end
                        if button and button.Parent then
                            button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                        end
                    end)
                end

                local function playFromAnimateToggle(humanoid, animate, folderName, childName, button, activeTracks)
                    if not animate then return end
                    local folder = animate:FindFirstChild(folderName)
                    if not folder then return end
                    local animObj = folder:FindFirstChild(childName)
                    if not animObj or not animObj:IsA("Animation") then return end
                    local id = tonumber(animObj.AnimationId:match("%d+"))
                    if id then playAnimToggle(humanoid, id, button, activeTracks) end
                end

                local function setupButtons(frame, humanoid, animate)
                    local activeTracks = {}

                    -- R15
                    local r15Section = makeSection(frame, "R15")
                    local r15Anims = {
                        { "Idle", "idle", "Animation1" },
                        { "Run", "run", "RunAnim" },
                        { "Jump", "jump", "JumpAnim" },
                        { "Fall", "fall", "FallAnim" },
                        { "Climb", "climb", "ClimbAnim" },
                    }
                    for _, info in ipairs(r15Anims) do
                        local b = makeButton(r15Section, info[1])
                        b.MouseButton1Click:Connect(function()
                            playFromAnimateToggle(humanoid, animate, info[2], info[3], b, activeTracks)
                        end)
                    end

                    -- R6
                    local r6Section = makeSection(frame, "R6")
                    local r6Anims = { Idle = 180435571, Run = 180426354, Jump = 125750702 }
                    for name, id in pairs(r6Anims) do
                        local b = makeButton(r6Section, name)
                        b.MouseButton1Click:Connect(function()
                            playAnimToggle(humanoid, id, b, activeTracks)
                        end)
                    end

                    -- R6 Emotes (Hidden)
                    local r6EmoteSection = makeSection(frame, "R6 Emotes")
                    r6EmoteSection.Visible = false

                    local r6Emotes = {
                        Wave = 507770239, Point = 507770453, Cheer = 507770677,
                        Dance1 = 507771019, Dance2 = 507771955, Dance3 = 507772104
                    }
                    for name, id in pairs(r6Emotes) do
                        local b = makeButton(r6EmoteSection, name)
                        b.MouseButton1Click:Connect(function()
                            playAnimToggle(humanoid, id, b, activeTracks)
                        end)
                    end

                    -- ðŸŽ­ Button next to GUI
                    local openButton = Instance.new("TextButton")
                    openButton.Text = "ðŸŽ­"
                    openButton.Font = Enum.Font.GothamBold
                    openButton.TextScaled = true
                    openButton.Size = UDim2.new(0, 40, 0, 40)
                    openButton.Position = UDim2.new(1, 8, 0.5, -20)
                    openButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                    openButton.Parent = frame
                    Instance.new("UICorner", openButton).CornerRadius = UDim.new(0, 8)

                    local isOpen = false
                    openButton.MouseButton1Click:Connect(function()
                        isOpen = not isOpen
                        if isOpen then
                            r6EmoteSection.Visible = true
                            TweenService:Create(r6EmoteSection, TweenInfo.new(0.3), { BackgroundTransparency = 0.1 }):Play()
                        else
                            TweenService:Create(r6EmoteSection, TweenInfo.new(0.3), { BackgroundTransparency = 1 }):Play()
                            task.wait(0.3)
                            r6EmoteSection.Visible = false
                        end
                    end)
                end

                local function buildGuiForCharacter(char)
                    local humanoid = char:WaitForChild("Humanoid")
                    local animate = char:FindFirstChild("Animate")
                    local gui, frame = createGui()

                    local loading = Instance.new("TextLabel", frame)
                    loading.Text = "Loading Anim Player..."
                    loading.Size = UDim2.new(1, -16, 0, 40)
                    loading.Position = UDim2.new(0, 8, 0, 48)
                    loading.Font = Enum.Font.GothamBold
                    loading.TextScaled = true
                    loading.TextColor3 = Color3.new(1, 1, 1)
                    loading.BackgroundTransparency = 1

                    TweenService:Create(frame, TweenInfo.new(0.4), { BackgroundTransparency = 0.08 }):Play()
                    task.wait(0.6)
                    loading:Destroy()

                    setupButtons(frame, humanoid, animate)
                end

                local function onCharacterAdded(char)
                    task.wait(0.4)
                    buildGuiForCharacter(char)
                end

                player.CharacterAdded:Connect(onCharacterAdded)
                if player.Character then
                    onCharacterAdded(player.Character)
                end
            end
        },
        {
            Name = "Rainbow Animation Speed GUI",
            Callback = function()
                -- Full Rainbow Animation Speed GUI script
                if game:GetService("CoreGui"):FindFirstChild("AnimSpeedGUI") then
                    game:GetService("CoreGui"):FindFirstChild("AnimSpeedGUI"):Destroy()
                end

                local ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
                ScreenGui.Name = "AnimSpeedGUI"

                local Frame = Instance.new("Frame", ScreenGui)
                Frame.Size = UDim2.new(0, 250, 0, 140)
                Frame.Position = UDim2.new(0.5, -125, 0.5, -70)
                Frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                Frame.Active = true
                Frame.Draggable = true
                Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 12)

                local Title = Instance.new("TextLabel", Frame)
                Title.Text = "Animation Speed GUI"
                Title.Size = UDim2.new(1, 0, 0, 30)
                Title.BackgroundTransparency = 1
                Title.TextColor3 = Color3.new(1, 1, 1)
                Title.Font = Enum.Font.GothamBold
                Title.TextScaled = true

                local Box = Instance.new("TextBox", Frame)
                Box.PlaceholderText = "Enter Speed (e.g. 5)"
                Box.Text = ""
                Box.Size = UDim2.new(0.8, 0, 0, 35)
                Box.Position = UDim2.new(0.1, 0, 0.4, 0)
                Box.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                Box.TextColor3 = Color3.new(1, 1, 1)
                Box.Font = Enum.Font.Gotham
                Box.TextScaled = true
                Instance.new("UICorner", Box).CornerRadius = UDim.new(0, 8)

                local SetButton = Instance.new("TextButton", Frame)
                SetButton.Text = "Set Speed"
                SetButton.Size = UDim2.new(0.8, 0, 0, 35)
                SetButton.Position = UDim2.new(0.1, 0, 0.7, 0)
                SetButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                SetButton.TextColor3 = Color3.new(1, 1, 1)
                SetButton.Font = Enum.Font.GothamBold
                SetButton.TextScaled = true
                Instance.new("UICorner", SetButton).CornerRadius = UDim.new(0, 8)

                task.spawn(function()
                    while task.wait() do
                        local t = tick() * 2
                        Frame.BackgroundColor3 = Color3.fromHSV((t % 1), 1, 1)
                    end
                end)

                local speed = 1
                SetButton.MouseButton1Click:Connect(function()
                    local val = tonumber(Box.Text)
                    if val then
                        speed = val
                        SetButton.Text = "Speed Set: " .. val
                    else
                        SetButton.Text = "Invalid Input"
                    end
                end)

                local function AdjustAllAnimations(char)
                    local hum = char:FindFirstChildOfClass("Humanoid") or char:FindFirstChildOfClass("AnimationController")
                    if hum then
                        for _, track in pairs(hum:GetPlayingAnimationTracks()) do
                            pcall(function()
                                track:AdjustSpeed(speed)
                            end)
                        end
                    end

                    for _, tool in pairs(char:GetChildren()) do
                        if tool:IsA("Tool") then
                            local handleAnim = tool:FindFirstChildOfClass("AnimationController")
                            if handleAnim then
                                for _, track in pairs(handleAnim:GetPlayingAnimationTracks()) do
                                    pcall(function()
                                        track:AdjustSpeed(speed)
                                    end)
                                end
                            end
                        end
                    end
                end

                task.spawn(function()
                    while task.wait() do
                        local plr = game.Players.LocalPlayer
                        local char = plr.Character or plr.CharacterAdded:Wait()
                        AdjustAllAnimations(char)
                    end
                end)
            end
        }
    }
}
